<!DOCTYPE html>
<html>
  <head>
    <script src="https://aframe.io/releases/1.0.4/aframe.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script src="/js/components/interactions.js"></script>
    <script src="/js/components/cosmetic.js"></script>
    <script>
      window.user = <%- JSON.stringify(user, null, 2) %>;
    </script>
    <style>
      div.a-enter-ar {
        visibility: hidden;
      }

      #init-box {
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        background: #ffffff;
        background: linear-gradient(135deg,#ffffff 0%, #e0e0e0 75%);
        border-radius: 20px;
        border: 1px solid #c0c0c0;
        font-size: 4vh;
        font-family: monospace;
        z-index: 100001;
      }

      #init-box ol {
        height: 100%;
        display: flex;
        flex-direction: column;
        margin: 20px;
        padding: 0;
        list-style-type: none;
      }

      #init-box ol li {
        flex-grow: 1;
        margin: 0 auto;
        width: 75vw;
      }

      #init-box li * {
        font-size: inherit;
      }

      #init-box ol p {
        margin: 0 0 0.5em 0;
      }

      #init-box ol p.note {
        font-size: 75%;
      }

      #init-box button {
        border-radius: 5px;
        background-color: #e0f8f8;
        border: 3px solid #a0d8d8;
        color: #a0d8d8;
        width: 100%;
        padding: 1vw;
      }

      #init-box button[disabled] {
        background-color: #f8f8f8;
        border: 3px solid #d8d8d8;
        color: #d8d8d8;
      }

      #init-box li input {
        width: 98%;
      }

      #user-list {
        position: absolute;
        bottom: 0;
        left: 0;
        z-index: 100000;
        border: 3px solid rgba(192, 192, 192, 0.5);
        border-radius: 10px;
        background-color: rgba(192, 192, 192, 0.25);
        margin: 0;
        padding: 0.5vw;
        max-width: 25vw;
        overflow: auto;
      }

      #user-list li {
        font-family: monospace;
        list-style-type: none;
        padding: 0.25vh 0;
        margin: 0;
        color: #ffffff;
        text-shadow:
          -1px -1px 1px #101010,
          1px -1px 1px #101010,
          -1px 1px 1px #101010,
          1px 1px 1px #101010;
        white-space: nowrap;
      }

      .badge {
        display: inline-block;
        padding: .25em .4em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25rem;
      }
    </style>
  </head>
  <body>
    <a-scene debug shadow="type: pcfsoft; autoUpdate: true;" renderer="sortObjects: true;">
      <a-assets>
        <img id="wood-1" src="images/textures/wood-1-256.jpg">
        <img id="rubikscube" src="images/textures/rubikscube.png">
        <img id="note-texture" src="images/textures/note-a4-600x900.jpg">

        <a-asset-item id="chestofdrawers-obj" src="models/chestofdrawers.obj"></a-asset-item>
        <a-asset-item id="chestofdrawers-drawer-obj" src="models/chestofdrawers-drawer.obj"></a-asset-item>
      </a-assets>

      <a-entity id="chest" obj-model="obj: #chestofdrawers-obj;" material="src: #wood-1; repeat: 0.05 0.1;" shadow="receive: false; cast: true;" position="0 0 -1.5"><!-- chest of drawers group -->
        <a-box id="note" interaction="interacted:true; rotationOffset:70 0 0; positionOffset:0 .5 1.25; easing:easeInOutCirc;" width="0.2" depth="0.3" height="0.001" position="0 1.0005 0" material="src:#note-texture"></a-box>

        <a-entity id="drawer1" obj-model="obj: #chestofdrawers-drawer-obj;" interaction="positionOffset:0 0 0.40;" rotation="0 0 0" position="0 0.76 0" material="src: #wood-1; repeat: 0.05 0.1; offset: 0 0;"></a-entity>
        <a-entity id="drawer2" obj-model="obj: #chestofdrawers-drawer-obj;" interaction="positionOffset:0 0 0.40;" rotation="0 0 0" position="0 0.52 0" material="src: #wood-1; repeat: 0.05 0.1; offset: 0.1 0.2;"></a-entity>
        <a-entity id="drawer3" obj-model="obj: #chestofdrawers-drawer-obj;" interaction="positionOffset:0 0 0.40;" shadow="receive: true; cast: true;" rotation="0 0 0" position="0 0.28 0" material="src: #wood-1; repeat: 0.05 0.1; offset: 0.3 0.5;">
          <a-box id="rubikscube" src="#rubikscube" shadow="receive: true; cast: true;" interaction selectable-goal width="0.1" depth="0.1" height="0.1" position="0 0.07 0" rotation="0 0.13 0"></a-box>
        </a-entity>
        <a-entity id="drawer4" obj-model="obj: #chestofdrawers-drawer-obj;" interaction="positionOffset:0 0 0.40;" rotation="0 0 0" position="0 0.04 0" material="src: #wood-1; repeat: 0.05 0.1; offset: 0.7 0.6;"></a-entity>
      </a-entity>

      <a-plane id="floor" shadow="receive: true; cast: false;" position="0 0 0" rotation="-90 0 0" width="6" height="8" color="#7BC8A4"></a-plane>
      <a-sky id="sky" color="#ECECEC"></a-sky>

      <a-entity id="ambientlight" light="type: ambient; color: #ffd6aa; intensity: 0.25"></a-entity>
      <a-entity id="holder-directionallight" position="2 2.5 1">
        <a-entity id="directionallight" light="type: directional; color: #ffd6aa; intensity: 0.90; castShadow: true;" position="0 1 0"></a-entity>
      </a-entity>

      <a-camera position="0 1.6 0" rotation="0 0 0" look-controls wasd-controls="enabled:false;">
        <a-entity cursor="fuse: false; mouseCursorStylesEnabled: true; rayOrigin:entity" position="0 0 -0.1" scale="1 1 1"
          geometry="primitive: ring; radiusInner: 0.002; radiusOuter: 0.003" material="color: #ff0000; shader: flat"
          animation__enterSize="startEvents:mouseenter; property:scale; from:1 1 1; to:0.2 0.2 0.2; dur:500;"
          animation__enterColour="startEvents:mouseenter; property:material.color; to:#0088ff; dur:0;"
          animation__leaveSize="startEvents:mouseleave; property:scale; to:1 1 1; dur:100;"
          animation__leaveColour="startEvents:mouseleave; property:material.color; to:#ff0000; dur:100;"
          raycaster="far: 20; interval: 0; showLine:true;"
          interactor
        ></a-entity>
      </a-camera>
      <ul id="user-list"></ul>
    </a-scene>
    <div id="init-box">
      <ol>
        <li>
          <p>1. Enter your name in the box below:</p>

          <input type="text" placeholder="Your name"/>
        </li>
        <li>
          <p>2. Stand up and hold the phone in front of you</p>

          <p class="note">(You will need to turn around and look up and down for this game)</p>
        </li>
        <li>
          <button disabled>3. Tap or click this button to enter full&#8203;screen</button>
        </li>
      </ol>
    </div>
    <script>
      window.addEventListener('load', () => {

        const initDialog = document.querySelector('#init-box');
        const nameInput = document.querySelector('#init-box input');
        const initButton = document.querySelector('#init-box button');
        const userList = document.querySelector('#user-list');
        const scene = document.querySelector('a-scene');
        const interactionSystem = document.querySelector('a-scene').systems['interaction'];

        nameInput.style.boxShadow = "0px 0px 5px 5px " + window.user.colour;

        scene.addEventListener('loaded', () => {});

        nameInput.addEventListener('input', e => {
          initButton.disabled = (e.target.value.length === 0);
        });

        initButton.addEventListener('click', e => {
          initDialog.style.display = 'none';
          window.user.name = nameInput.value;
          interactionSystem.registerUser(window.user);
          scene.requestFullscreen({
            navigationUI: 'hide'
          });
        });

        interactionSystem.socket.on('sync_state', (serverState) => {
          userList.innerHTML = Object.keys(serverState.users)
            .sort()
            .map(u => serverState.users[u])
            .map(u => `<li><span class="badge" style="background-color:${u.colour};">&nbsp;&nbsp;</span> ${u.name}</li>`)
            .join('\n');
        });
      });
    </script>
  </body>
</html>